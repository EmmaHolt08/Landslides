{"ast":null,"code":"var _jsxFileName = \"/Users/emmaholt/Desktop/DataImport2/test-react-leaflet-issue/src/AuthPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from 'react';\n\n// Define keys for localStorage.\n// const LOCAL_STORAGE_USER_KEY = 'landslide_app_user';\n// const LOCAL_STORAGE_EXPLICIT_LOGIN_KEY = 'landslide_app_explicit_login';\n// const LOCAL_STORAGE_REGISTERED_USERS_KEY = 'landslide_app_registered_users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_AUTH_TOKEN_KEY = 'landlside_app_auth_token';\nexport const AuthContext = /*#__PURE__*/createContext(null);\nconst AuthPage = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [userID, setUserID] = useState(null);\n  const [isExplicitlyLoggedIn, setIsExplicitlyLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [authError, setAuthError] = useState('');\n  const [authReady, setAuthReady] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // const [user, setUser] = useState(() => {\n  //   try {\n  //     const storedUser = localStorage.getItem(LOCAL_STORAGE_USER_KEY);\n  //     return storedUser ? JSON.parse(storedUser) : null;\n  //   } catch (error) {\n  //     return null;\n  //   }\n  // });\n\n  //const [userId, setUserId] = useState(() => user ? user.uid : null);\n\n  // const [isExplicitlyLoggedIn, setIsExplicitlyLoggedIn] = useState(() => {\n  //   try {\n  //     const storedLoginStatus = localStorage.getItem(LOCAL_STORAGE_EXPLICIT_LOGIN_KEY);\n  //     return storedLoginStatus === 'true';\n  //   } catch (error) {\n  //     return false;\n  //   }\n  // });\n\n  // const [registeredUsers, setRegisteredUsers] = useState(() => {\n  //   try {\n  //     const storedRegisteredUsers = localStorage.getItem(LOCAL_STORAGE_REGISTERED_USERS_KEY);\n  //     return storedRegisteredUsers ? JSON.parse(storedRegisteredUsers) : {};\n  //   } catch (error) {\n  //     return {};\n  //   }\n  // });\n\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  // const [authError, setAuthError] = useState('');\n  // const [authReady, setAuthReady] = useState(false);\n  // const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    setAuthReady(true);\n    if (isExplicitlyLoggedIn && user) {\n      setMessage(`Welcome back, ${user.email}!`);\n    } else {\n      setMessage('Please log in or sign up to access the application.');\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   if (user) {\n  //     localStorage.setItem(LOCAL_STORAGE_USER_KEY, JSON.stringify(user));\n  //   } else {\n  //     localStorage.removeItem(LOCAL_STORAGE_USER_KEY);\n  //   }\n  //   localStorage.setItem(LOCAL_STORAGE_EXPLICIT_LOGIN_KEY, String(isExplicitlyLoggedIn));\n  // }, [user, isExplicitlyLoggedIn]);\n\n  // useEffect(() => {\n  //   localStorage.setItem(LOCAL_STORAGE_REGISTERED_USERS_KEY, JSON.stringify(registeredUsers));\n  // }, [registeredUsers]);\n\n  const handleSignUp = async () => {\n    setAuthError('');\n    setMessage('');\n    if (!authReady) {\n      setAuthError('Authentication not ready. Please wait.');\n      return;\n    }\n    if (!email || !password) {\n      setAuthError('Please enter both email and password.');\n      return;\n    }\n    if (registeredUsers[email]) {\n      setAuthError('An account with this email already exists. Please sign in.');\n      return;\n    }\n    const newUid = `${btoa(email).slice(0, 10)}`; //random 10 char string\n    const newUserProfile = {\n      email: email,\n      uid: newUid\n    };\n    setRegisteredUsers(prev => ({\n      ...prev,\n      [email]: {\n        password: password,\n        uid: newUid\n      }\n    }));\n    setUser(newUserProfile);\n    setUserId(newUid);\n    setIsExplicitlyLoggedIn(true);\n    setMessage('Account created successfully! You are now logged in.');\n  };\n  const handleSignIn = async () => {\n    setAuthError('');\n    setMessage('');\n    if (!authReady) {\n      setAuthError('Authentication not ready. Please wait.');\n      return;\n    }\n    if (!email || !password) {\n      setAuthError('Please enter both email and password.');\n      return;\n    }\n    const storedUser = registeredUsers[email];\n    if (!storedUser) {\n      setAuthError('No account found with this email/password. Please sign up.');\n      setIsExplicitlyLoggedIn(false);\n      return;\n    }\n    if (storedUser.password === password) {\n      const loggedInUser = {\n        email: email,\n        uid: storedUser.uid\n      };\n      setUser(loggedInUser);\n      setUserID(loggedInUser.uid);\n      setIsExplicitlyLoggedIn(true);\n      setMessage('Logged in successfully!');\n    } else {\n      setAuthError('Invalid email or password.');\n      setIsExplicitlyLoggedIn(false);\n    }\n  };\n  const handleSignOut = async () => {\n    setAuthError('');\n    setMessage('');\n    if (!authReady) {\n      setAuthError('Authentication not ready. Please wait.');\n      return;\n    }\n    setUser(null);\n    setUserId(null);\n    setIsExplicitlyLoggedIn(false);\n    setMessage('Logged out successfully.');\n    localStorage.removeItem(LOCAL_STORAGE_USER_KEY);\n    localStorage.removeItem(LOCAL_STORAGE_EXPLICIT_LOGIN_KEY);\n  };\n  const authContextValue = {\n    user,\n    userId,\n    authReady,\n    isExplicitlyLoggedIn,\n    authError,\n    message,\n    handleSignIn,\n    handleSignUp,\n    handleSignOut,\n    setEmail,\n    setPassword,\n    email,\n    password\n  };\n  if (!authReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-loading-box\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"auth-loading-text\",\n          children: \"Loading authentication...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isExplicitlyLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: authContextValue,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-page-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-form-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"auth-form-title\",\n            children: \"Landslide Report Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), authError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-error-message\",\n            role: \"alert\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"auth-message-strong\",\n              children: \"Error:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"auth-message-span\",\n              children: authError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-info-message\",\n            role: \"alert\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"auth-message-strong\",\n              children: \"Info:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"auth-message-span\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: \"auth-label\",\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                className: \"auth-input\",\n                placeholder: \"your.email@example.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: \"auth-label\",\n                children: \"Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                className: \"auth-input\",\n                placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-button-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSignIn,\n                className: \"auth-button auth-button-primary\",\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSignUp,\n                className: \"auth-button auth-button-secondary\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"iu1LWSSbqWqzcsSH+0ij/BsI88w=\");\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useEffect","createContext","jsxDEV","_jsxDEV","LOCAL_STORAGE_AUTH_TOKEN_KEY","AuthContext","AuthPage","children","_s","user","setUser","userID","setUserID","isExplicitlyLoggedIn","setIsExplicitlyLoggedIn","email","setEmail","password","setPassword","authError","setAuthError","authReady","setAuthReady","message","setMessage","handleSignUp","registeredUsers","newUid","btoa","slice","newUserProfile","uid","setRegisteredUsers","prev","setUserId","handleSignIn","storedUser","loggedInUser","handleSignOut","localStorage","removeItem","LOCAL_STORAGE_USER_KEY","LOCAL_STORAGE_EXPLICIT_LOGIN_KEY","authContextValue","userId","className","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","role","htmlFor","type","id","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/emmaholt/Desktop/DataImport2/test-react-leaflet-issue/src/AuthPage.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\n\n// Define keys for localStorage.\n// const LOCAL_STORAGE_USER_KEY = 'landslide_app_user';\n// const LOCAL_STORAGE_EXPLICIT_LOGIN_KEY = 'landslide_app_explicit_login';\n// const LOCAL_STORAGE_REGISTERED_USERS_KEY = 'landslide_app_registered_users';\n\nconst LOCAL_STORAGE_AUTH_TOKEN_KEY = 'landlside_app_auth_token';\nexport const AuthContext = createContext(null);\n\nconst AuthPage = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [userID, setUserID] = useState(null);\n  const [isExplicitlyLoggedIn, setIsExplicitlyLoggedIn] = useState(false);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [authError, setAuthError] = useState('');\n  const [authReady, setAuthReady] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // const [user, setUser] = useState(() => {\n  //   try {\n  //     const storedUser = localStorage.getItem(LOCAL_STORAGE_USER_KEY);\n  //     return storedUser ? JSON.parse(storedUser) : null;\n  //   } catch (error) {\n  //     return null;\n  //   }\n  // });\n\n  //const [userId, setUserId] = useState(() => user ? user.uid : null);\n\n  // const [isExplicitlyLoggedIn, setIsExplicitlyLoggedIn] = useState(() => {\n  //   try {\n  //     const storedLoginStatus = localStorage.getItem(LOCAL_STORAGE_EXPLICIT_LOGIN_KEY);\n  //     return storedLoginStatus === 'true';\n  //   } catch (error) {\n  //     return false;\n  //   }\n  // });\n\n  // const [registeredUsers, setRegisteredUsers] = useState(() => {\n  //   try {\n  //     const storedRegisteredUsers = localStorage.getItem(LOCAL_STORAGE_REGISTERED_USERS_KEY);\n  //     return storedRegisteredUsers ? JSON.parse(storedRegisteredUsers) : {};\n  //   } catch (error) {\n  //     return {};\n  //   }\n  // });\n\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  // const [authError, setAuthError] = useState('');\n  // const [authReady, setAuthReady] = useState(false);\n  // const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    setAuthReady(true);\n    if (isExplicitlyLoggedIn && user) {\n      setMessage(`Welcome back, ${user.email}!`);\n    } else {\n      setMessage('Please log in or sign up to access the application.');\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   if (user) {\n  //     localStorage.setItem(LOCAL_STORAGE_USER_KEY, JSON.stringify(user));\n  //   } else {\n  //     localStorage.removeItem(LOCAL_STORAGE_USER_KEY);\n  //   }\n  //   localStorage.setItem(LOCAL_STORAGE_EXPLICIT_LOGIN_KEY, String(isExplicitlyLoggedIn));\n  // }, [user, isExplicitlyLoggedIn]);\n\n  // useEffect(() => {\n  //   localStorage.setItem(LOCAL_STORAGE_REGISTERED_USERS_KEY, JSON.stringify(registeredUsers));\n  // }, [registeredUsers]);\n\n\n  const handleSignUp = async () => {\n    setAuthError('');\n    setMessage('');\n    if (!authReady) {\n      setAuthError('Authentication not ready. Please wait.');\n      return;\n    }\n    if (!email || !password) {\n      setAuthError('Please enter both email and password.');\n      return;\n    }\n\n    if (registeredUsers[email]) {\n      setAuthError('An account with this email already exists. Please sign in.');\n      return;\n    }\n\n    const newUid = `${btoa(email).slice(0, 10)}`; //random 10 char string\n    const newUserProfile = { email: email, uid: newUid };\n\n    setRegisteredUsers(prev => ({\n      ...prev,\n      [email]: { password: password, uid: newUid }\n    }));\n\n    setUser(newUserProfile);\n    setUserId(newUid);\n    setIsExplicitlyLoggedIn(true);\n    setMessage('Account created successfully! You are now logged in.');\n  };\n\n  const handleSignIn = async () => {\n    setAuthError('');\n    setMessage('');\n    if (!authReady) {\n      setAuthError('Authentication not ready. Please wait.');\n      return;\n    }\n    if (!email || !password) {\n      setAuthError('Please enter both email and password.');\n      return;\n    }\n\n    const storedUser = registeredUsers[email];\n\n    if (!storedUser) {\n      setAuthError('No account found with this email/password. Please sign up.');\n      setIsExplicitlyLoggedIn(false);\n      return;\n    }\n\n    if (storedUser.password === password) {\n      const loggedInUser = { email: email, uid: storedUser.uid };\n      setUser(loggedInUser);\n      setUserID(loggedInUser.uid);\n      setIsExplicitlyLoggedIn(true);\n      setMessage('Logged in successfully!');\n    } else {\n      setAuthError('Invalid email or password.');\n      setIsExplicitlyLoggedIn(false);\n    }\n  };\n\n  const handleSignOut = async () => {\n    setAuthError('');\n    setMessage('');\n    if (!authReady) {\n      setAuthError('Authentication not ready. Please wait.');\n      return;\n    }\n    setUser(null);\n    setUserId(null);\n    setIsExplicitlyLoggedIn(false);\n    setMessage('Logged out successfully.');\n\n    localStorage.removeItem(LOCAL_STORAGE_USER_KEY);\n    localStorage.removeItem(LOCAL_STORAGE_EXPLICIT_LOGIN_KEY);\n  };\n\n  const authContextValue = {\n    user,\n    userId,\n    authReady,\n    isExplicitlyLoggedIn,\n    authError,\n    message,\n    handleSignIn,\n    handleSignUp,\n    handleSignOut,\n    setEmail,\n    setPassword,\n    email,\n    password,\n  };\n\n  if (!authReady) {\n    return (\n      <div className=\"auth-loading-container\">\n        <div className=\"auth-loading-box\">\n          <p className=\"auth-loading-text\">Loading authentication...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!isExplicitlyLoggedIn) {\n    return (\n      <AuthContext.Provider value={authContextValue}>\n        <div className=\"auth-page-container\">\n          <div className=\"auth-form-card\">\n            <h2 className=\"auth-form-title\">\n              Landslide Report Login\n            </h2>\n\n            {authError && (\n              <div className=\"auth-error-message\" role=\"alert\">\n                <strong className=\"auth-message-strong\">Error:</strong>\n                <span className=\"auth-message-span\">{authError}</span>\n              </div>\n            )}\n\n            {message && (\n              <div className=\"auth-info-message\" role=\"alert\">\n                <strong className=\"auth-message-strong\">Info:</strong>\n                <span className=\"auth-message-span\">{message}</span>\n              </div>\n            )}\n\n            <div>\n              <div className=\"auth-input-group\">\n                <label htmlFor=\"email\" className=\"auth-label\">\n                  Email:\n                </label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"auth-input\"\n                  placeholder=\"your.email@example.com\"\n                />\n              </div>\n              <div className=\"auth-input-group\">\n                <label htmlFor=\"password\" className=\"auth-label\">\n                  Password:\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"auth-input\"\n                  placeholder=\"••••••••\"\n                />\n              </div>\n              <div className=\"auth-button-group\">\n                <button\n                  onClick={handleSignIn}\n                  className=\"auth-button auth-button-primary\"\n                >\n                  Sign In\n                </button>\n                <button\n                  onClick={handleSignUp}\n                  className=\"auth-button auth-button-secondary\"\n                >\n                  Sign Up\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </AuthContext.Provider>\n    );\n  }\n\n  return (\n    <AuthContext.Provider value={authContextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}