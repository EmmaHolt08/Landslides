{"ast":null,"code":"var _jsxFileName = \"/Users/emmaholt/Desktop/DataImport2/test-react-leaflet-issue/src/AuthPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from 'react';\n\n// Define keys for localStorage.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_USER_KEY = 'landslide_app_user';\nconst LOCAL_STORAGE_EXPLICIT_LOGIN_KEY = 'landslide_app_explicit_login';\nconst LOCAL_STORAGE_REGISTERED_USERS_KEY = 'landslide_app_registered_users';\nexport const AuthContext = /*#__PURE__*/createContext(null);\nconst AuthPage = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    try {\n      const storedUser = localStorage.getItem(LOCAL_STORAGE_USER_KEY);\n      return storedUser ? JSON.parse(storedUser) : null;\n    } catch (error) {\n      console.error(\"Failed to parse user from localStorage:\", error);\n      return null;\n    }\n  });\n  const [userId, setUserId] = useState(() => user ? user.uid : null);\n  const [isExplicitlyLoggedIn, setIsExplicitlyLoggedIn] = useState(() => {\n    try {\n      const storedLoginStatus = localStorage.getItem(LOCAL_STORAGE_EXPLICIT_LOGIN_KEY);\n      return storedLoginStatus === 'true';\n    } catch (error) {\n      console.error(\"Failed to parse explicit login status from localStorage:\", error);\n      return false;\n    }\n  });\n  const [registeredUsers, setRegisteredUsers] = useState(() => {\n    try {\n      const storedRegisteredUsers = localStorage.getItem(LOCAL_STORAGE_REGISTERED_USERS_KEY);\n      return storedRegisteredUsers ? JSON.parse(storedRegisteredUsers) : {};\n    } catch (error) {\n      console.error(\"Failed to parse registered users from localStorage:\", error);\n      return {};\n    }\n  });\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [authError, setAuthError] = useState('');\n  const [authReady, setAuthReady] = useState(false);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    console.log('AuthPage: useEffect - Initializing mock authentication...');\n    setAuthReady(true);\n    console.log('AuthPage: Mock authentication ready.');\n    if (isExplicitlyLoggedIn && user) {\n      setMessage(`Welcome back, ${user.email}!`);\n    } else {\n      setMessage('Please log in or sign up to access the application.');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem(LOCAL_STORAGE_USER_KEY, JSON.stringify(user));\n    } else {\n      localStorage.removeItem(LOCAL_STORAGE_USER_KEY);\n    }\n    localStorage.setItem(LOCAL_STORAGE_EXPLICIT_LOGIN_KEY, String(isExplicitlyLoggedIn));\n  }, [user, isExplicitlyLoggedIn]);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_REGISTERED_USERS_KEY, JSON.stringify(registeredUsers));\n  }, [registeredUsers]);\n  const handleSignUp = async () => {\n    setAuthError('');\n    setMessage('');\n    if (!authReady) {\n      setAuthError('Authentication not ready. Please wait.');\n      return;\n    }\n    if (!email || !password) {\n      setAuthError('Please enter both email and password.');\n      return;\n    }\n    if (registeredUsers[email]) {\n      setAuthError('An account with this email already exists. Please sign in.');\n      return;\n    }\n    const newUid = `mock-${btoa(email).slice(0, 10)}`;\n    const newUserProfile = {\n      email: email,\n      uid: newUid\n    };\n    setRegisteredUsers(prev => ({\n      ...prev,\n      [email]: {\n        password: password,\n        uid: newUid\n      }\n    }));\n    setUser(newUserProfile);\n    setUserId(newUid);\n    setIsExplicitlyLoggedIn(true);\n    setMessage('Account created successfully! You are now logged in.');\n    console.log('AuthPage: Sign up successful. User:', newUserProfile);\n  };\n  const handleSignIn = async () => {\n    setAuthError('');\n    setMessage('');\n    if (!authReady) {\n      setAuthError('Authentication not ready. Please wait.');\n      return;\n    }\n    if (!email || !password) {\n      setAuthError('Please enter both email and password.');\n      return;\n    }\n    const storedUser = registeredUsers[email];\n    if (!storedUser) {\n      setAuthError('No account found with this email. Please sign up.');\n      setIsExplicitlyLoggedIn(false);\n      return;\n    }\n    if (storedUser.password === password) {\n      const loggedInUser = {\n        email: email,\n        uid: storedUser.uid\n      };\n      setUser(loggedInUser);\n      setUserId(loggedInUser.uid);\n      setIsExplicitlyLoggedIn(true);\n      setMessage('Logged in successfully!');\n      console.log('AuthPage: Mock sign in successful. User:', loggedInUser);\n    } else {\n      setAuthError('Invalid email or password.');\n      setIsExplicitlyLoggedIn(false);\n    }\n  };\n  const handleSignOut = async () => {\n    setAuthError('');\n    setMessage('');\n    if (!authReady) {\n      setAuthError('Authentication not ready. Please wait.');\n      return;\n    }\n    setUser(null);\n    setUserId(null);\n    setIsExplicitlyLoggedIn(false);\n    setMessage('Logged out successfully.');\n    console.log('AuthPage: Mock sign out successful.');\n    localStorage.removeItem(LOCAL_STORAGE_USER_KEY);\n    localStorage.removeItem(LOCAL_STORAGE_EXPLICIT_LOGIN_KEY);\n  };\n  const authContextValue = {\n    user,\n    userId,\n    authReady,\n    isExplicitlyLoggedIn,\n    authError,\n    message,\n    handleSignIn,\n    handleSignUp,\n    handleSignOut,\n    setEmail,\n    setPassword,\n    email,\n    password\n  };\n  if (!authReady) {\n    console.log('AuthPage: Rendering loading state.');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-loading-box\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"auth-loading-text\",\n          children: \"Loading authentication...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isExplicitlyLoggedIn) {\n    console.log('AuthPage: Rendering login/signup form.');\n    return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: authContextValue,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-page-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-form-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"auth-form-title\",\n            children: \"Landslide Report Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), authError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-error-message\",\n            role: \"alert\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"auth-message-strong\",\n              children: \"Error:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"auth-message-span\",\n              children: authError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-info-message\",\n            role: \"alert\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"auth-message-strong\",\n              children: \"Info:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"auth-message-span\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: \"auth-label\",\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                className: \"auth-input\",\n                placeholder: \"your.email@example.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: \"auth-label\",\n                children: \"Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                className: \"auth-input\",\n                placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-button-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSignIn,\n                className: \"auth-button auth-button-primary\",\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSignUp,\n                className: \"auth-button auth-button-secondary\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n  console.log('AuthPage: User explicitly logged in. Rendering children.');\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"HxS3oguXSv1DH57IeDeU8AU+LVI=\");\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useEffect","createContext","jsxDEV","_jsxDEV","LOCAL_STORAGE_USER_KEY","LOCAL_STORAGE_EXPLICIT_LOGIN_KEY","LOCAL_STORAGE_REGISTERED_USERS_KEY","AuthContext","AuthPage","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","error","console","userId","setUserId","uid","isExplicitlyLoggedIn","setIsExplicitlyLoggedIn","storedLoginStatus","registeredUsers","setRegisteredUsers","storedRegisteredUsers","email","setEmail","password","setPassword","authError","setAuthError","authReady","setAuthReady","message","setMessage","log","setItem","stringify","removeItem","String","handleSignUp","newUid","btoa","slice","newUserProfile","prev","handleSignIn","loggedInUser","handleSignOut","authContextValue","className","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","role","htmlFor","type","id","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/emmaholt/Desktop/DataImport2/test-react-leaflet-issue/src/AuthPage.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\n\n// Define keys for localStorage.\nconst LOCAL_STORAGE_USER_KEY = 'landslide_app_user';\nconst LOCAL_STORAGE_EXPLICIT_LOGIN_KEY = 'landslide_app_explicit_login';\nconst LOCAL_STORAGE_REGISTERED_USERS_KEY = 'landslide_app_registered_users';\n\nexport const AuthContext = createContext(null);\n\nconst AuthPage = ({ children }) => {\n  const [user, setUser] = useState(() => {\n    try {\n      const storedUser = localStorage.getItem(LOCAL_STORAGE_USER_KEY);\n      return storedUser ? JSON.parse(storedUser) : null;\n    } catch (error) {\n      console.error(\"Failed to parse user from localStorage:\", error);\n      return null;\n    }\n  });\n\n  const [userId, setUserId] = useState(() => user ? user.uid : null);\n\n  const [isExplicitlyLoggedIn, setIsExplicitlyLoggedIn] = useState(() => {\n    try {\n      const storedLoginStatus = localStorage.getItem(LOCAL_STORAGE_EXPLICIT_LOGIN_KEY);\n      return storedLoginStatus === 'true';\n    } catch (error) {\n      console.error(\"Failed to parse explicit login status from localStorage:\", error);\n      return false;\n    }\n  });\n\n  const [registeredUsers, setRegisteredUsers] = useState(() => {\n    try {\n      const storedRegisteredUsers = localStorage.getItem(LOCAL_STORAGE_REGISTERED_USERS_KEY);\n      return storedRegisteredUsers ? JSON.parse(storedRegisteredUsers) : {};\n    } catch (error) {\n      console.error(\"Failed to parse registered users from localStorage:\", error);\n      return {};\n    }\n  });\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [authError, setAuthError] = useState('');\n  const [authReady, setAuthReady] = useState(false);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    console.log('AuthPage: useEffect - Initializing mock authentication...');\n    setAuthReady(true);\n    console.log('AuthPage: Mock authentication ready.');\n    if (isExplicitlyLoggedIn && user) {\n      setMessage(`Welcome back, ${user.email}!`);\n    } else {\n      setMessage('Please log in or sign up to access the application.');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem(LOCAL_STORAGE_USER_KEY, JSON.stringify(user));\n    } else {\n      localStorage.removeItem(LOCAL_STORAGE_USER_KEY);\n    }\n    localStorage.setItem(LOCAL_STORAGE_EXPLICIT_LOGIN_KEY, String(isExplicitlyLoggedIn));\n  }, [user, isExplicitlyLoggedIn]);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_REGISTERED_USERS_KEY, JSON.stringify(registeredUsers));\n  }, [registeredUsers]);\n\n\n  const handleSignUp = async () => {\n    setAuthError('');\n    setMessage('');\n    if (!authReady) {\n      setAuthError('Authentication not ready. Please wait.');\n      return;\n    }\n    if (!email || !password) {\n      setAuthError('Please enter both email and password.');\n      return;\n    }\n\n    if (registeredUsers[email]) {\n      setAuthError('An account with this email already exists. Please sign in.');\n      return;\n    }\n\n    const newUid = `mock-${btoa(email).slice(0, 10)}`;\n    const newUserProfile = { email: email, uid: newUid };\n\n    setRegisteredUsers(prev => ({\n      ...prev,\n      [email]: { password: password, uid: newUid }\n    }));\n\n    setUser(newUserProfile);\n    setUserId(newUid);\n    setIsExplicitlyLoggedIn(true);\n    setMessage('Account created successfully! You are now logged in.');\n    console.log('AuthPage: Sign up successful. User:', newUserProfile);\n  };\n\n  const handleSignIn = async () => {\n    setAuthError('');\n    setMessage('');\n    if (!authReady) {\n      setAuthError('Authentication not ready. Please wait.');\n      return;\n    }\n    if (!email || !password) {\n      setAuthError('Please enter both email and password.');\n      return;\n    }\n\n    const storedUser = registeredUsers[email];\n\n    if (!storedUser) {\n      setAuthError('No account found with this email. Please sign up.');\n      setIsExplicitlyLoggedIn(false);\n      return;\n    }\n\n    if (storedUser.password === password) {\n      const loggedInUser = { email: email, uid: storedUser.uid };\n      setUser(loggedInUser);\n      setUserId(loggedInUser.uid);\n      setIsExplicitlyLoggedIn(true);\n      setMessage('Logged in successfully!');\n      console.log('AuthPage: Mock sign in successful. User:', loggedInUser);\n    } else {\n      setAuthError('Invalid email or password.');\n      setIsExplicitlyLoggedIn(false);\n    }\n  };\n\n  const handleSignOut = async () => {\n    setAuthError('');\n    setMessage('');\n    if (!authReady) {\n      setAuthError('Authentication not ready. Please wait.');\n      return;\n    }\n    setUser(null);\n    setUserId(null);\n    setIsExplicitlyLoggedIn(false);\n    setMessage('Logged out successfully.');\n    console.log('AuthPage: Mock sign out successful.');\n\n    localStorage.removeItem(LOCAL_STORAGE_USER_KEY);\n    localStorage.removeItem(LOCAL_STORAGE_EXPLICIT_LOGIN_KEY);\n  };\n\n  const authContextValue = {\n    user,\n    userId,\n    authReady,\n    isExplicitlyLoggedIn,\n    authError,\n    message,\n    handleSignIn,\n    handleSignUp,\n    handleSignOut,\n    setEmail,\n    setPassword,\n    email,\n    password,\n  };\n\n  if (!authReady) {\n    console.log('AuthPage: Rendering loading state.');\n    return (\n      <div className=\"auth-loading-container\">\n        <div className=\"auth-loading-box\">\n          <p className=\"auth-loading-text\">Loading authentication...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!isExplicitlyLoggedIn) {\n    console.log('AuthPage: Rendering login/signup form.');\n    return (\n      <AuthContext.Provider value={authContextValue}>\n        <div className=\"auth-page-container\">\n          <div className=\"auth-form-card\">\n            <h2 className=\"auth-form-title\">\n              Landslide Report Login\n            </h2>\n\n            {authError && (\n              <div className=\"auth-error-message\" role=\"alert\">\n                <strong className=\"auth-message-strong\">Error:</strong>\n                <span className=\"auth-message-span\">{authError}</span>\n              </div>\n            )}\n\n            {message && (\n              <div className=\"auth-info-message\" role=\"alert\">\n                <strong className=\"auth-message-strong\">Info:</strong>\n                <span className=\"auth-message-span\">{message}</span>\n              </div>\n            )}\n\n            <div>\n              <div className=\"auth-input-group\">\n                <label htmlFor=\"email\" className=\"auth-label\">\n                  Email:\n                </label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"auth-input\"\n                  placeholder=\"your.email@example.com\"\n                />\n              </div>\n              <div className=\"auth-input-group\">\n                <label htmlFor=\"password\" className=\"auth-label\">\n                  Password:\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"auth-input\"\n                  placeholder=\"••••••••\"\n                />\n              </div>\n              <div className=\"auth-button-group\">\n                <button\n                  onClick={handleSignIn}\n                  className=\"auth-button auth-button-primary\"\n                >\n                  Sign In\n                </button>\n                <button\n                  onClick={handleSignUp}\n                  className=\"auth-button auth-button-secondary\"\n                >\n                  Sign Up\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </AuthContext.Provider>\n    );\n  }\n\n  console.log('AuthPage: User explicitly logged in. Rendering children.');\n  return (\n    <AuthContext.Provider value={authContextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}